// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TreinamentoWPF;

#nullable disable

namespace TreinamentoWPF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Excluido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Registro")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Evoliz.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "articleid");

                    b.Property<int?>("CustomFieldsId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DesignationClean")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("Relational:JsonPropertyName", "designation_clean");

                    b.Property<bool>("Enabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MarginId")
                        .HasColumnType("int");

                    b.Property<string>("Nature")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PictureLink")
                        .HasColumnType("varchar(180)");

                    b.Property<int?>("PurchaseClassificationId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReferenceClean")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("SaleClassificationId")
                        .HasColumnType("int");

                    b.Property<bool>("StockManagement")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("StockedQuantity")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierReference")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SupplierReferenceClean")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Ttc")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Unit")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("UnitPriceVatExclude")
                        .HasColumnType("decimal(20,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "unit_price_vat_exclude");

                    b.Property<int>("UserId")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<int?>("Vat")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .HasColumnType("double(20,4)");

                    b.Property<decimal>("unit_price_vat_include")
                        .HasColumnType("decimal(20,2)");

                    b.HasKey("ArticleId");

                    b.HasIndex("CustomFieldsId");

                    b.HasIndex("MarginId");

                    b.HasIndex("PurchaseClassificationId");

                    b.HasIndex("SaleClassificationId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Evoliz.CustomFieldApi", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CustomFieldsApi");
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Evoliz.CustomFieldApi2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Value")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CustomFieldsApi2");
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Evoliz.CustomFields", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CustomFieldApi2Id")
                        .HasColumnType("int");

                    b.Property<int?>("CustomFieldApiId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomFieldApi2Id");

                    b.HasIndex("CustomFieldApiId");

                    b.ToTable("CustomFields");
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Evoliz.Margin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(20,2)");

                    b.Property<decimal?>("Coefficient")
                        .HasColumnType("decimal(20,2)");

                    b.Property<decimal?>("MarginPercent")
                        .HasColumnType("decimal(20,2)");

                    b.Property<decimal?>("MarkupPercent")
                        .HasColumnType("decimal(20,2)");

                    b.Property<decimal?>("PurchaseUnitPriceVatExclude")
                        .HasColumnType("decimal(20,2)");

                    b.HasKey("Id");

                    b.ToTable("Margins");
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Evoliz.PurchaseClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<int?>("Code")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PurchaseClassifications");
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Evoliz.SaleClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("SaleClassifications");
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Evoliz.Supplier", b =>
                {
                    b.Property<int?>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(150)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apresentacao")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Custo")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("Imagem")
                        .HasColumnType("mediumblob");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TreinamentoWPF.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TreinamentoWPF.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TreinamentoWPF.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TreinamentoWPF.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Evoliz.Article", b =>
                {
                    b.HasOne("TreinamentoWPF.Models.Evoliz.CustomFields", "CustomFields")
                        .WithMany()
                        .HasForeignKey("CustomFieldsId");

                    b.HasOne("TreinamentoWPF.Models.Evoliz.Margin", "Margin")
                        .WithMany()
                        .HasForeignKey("MarginId");

                    b.HasOne("TreinamentoWPF.Models.Evoliz.PurchaseClassification", "PurchaseClassification")
                        .WithMany()
                        .HasForeignKey("PurchaseClassificationId");

                    b.HasOne("TreinamentoWPF.Models.Evoliz.SaleClassification", "SaleClassification")
                        .WithMany()
                        .HasForeignKey("SaleClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TreinamentoWPF.Models.Evoliz.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.Navigation("CustomFields");

                    b.Navigation("Margin");

                    b.Navigation("PurchaseClassification");

                    b.Navigation("SaleClassification");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Evoliz.CustomFields", b =>
                {
                    b.HasOne("TreinamentoWPF.Models.Evoliz.CustomFieldApi2", "CustomFieldApi2")
                        .WithMany()
                        .HasForeignKey("CustomFieldApi2Id");

                    b.HasOne("TreinamentoWPF.Models.Evoliz.CustomFieldApi", "CustomFieldApi")
                        .WithMany()
                        .HasForeignKey("CustomFieldApiId");

                    b.Navigation("CustomFieldApi");

                    b.Navigation("CustomFieldApi2");
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Produto", b =>
                {
                    b.HasOne("TreinamentoWPF.Models.Categoria", null)
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId");
                });

            modelBuilder.Entity("TreinamentoWPF.Models.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
